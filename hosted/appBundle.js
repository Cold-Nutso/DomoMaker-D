(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e,document.getElementById("domoMessage").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,a,o)=>{const m=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),r=await m.json();document.getElementById("domoMessage").classList.add("hidden"),r.error&&t(r.error),r.redirect&&(window.location=r.redirect),o&&o(r)},hideError:()=>{document.getElementById("domoMessage").classList.add("hidden")}}}},t={};function a(o){var m=t[o];if(void 0!==m)return m.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,a),r.exports}(()=>{const e=a(603),t=async()=>{const e=await fetch("/getDomos"),t=await e.json();ReactDOM.render(React.createElement(r,{domos:t.domos}),document.getElementById("domos"))},o=a=>{a.preventDefault(),e.hideError();const o=a.target.querySelector("#domoName").value,m=a.target.querySelector("#domoAge").value,r=a.target.querySelector("#_csrf").value;return o&&m?(e.sendPost(a.target.action,{name:o,age:m,_csrf:r},t),!1):(e.handleError("All fields are required!"),!1)},m=e=>React.createElement("form",{id:"domoForm",onSubmit:o,name:"domoForm",action:"/maker",method:"POST",className:"domoForm"},React.createElement("label",{htmlFor:"name"},"Name: "),React.createElement("input",{id:"domoName",type:"text",name:"name",placeholder:"Domo Name"}),React.createElement("label",{htmlFor:"age"},"Age: "),React.createElement("input",{id:"domoAge",type:"number",min:"0",name:"age"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"makeDomoSubmit",type:"submit",value:"Make Domo"})),r=e=>{if(0===e.domos.length)return React.createElement("div",{className:"domoList"},React.createElement("h3",{className:"emptyDomo"},"No Domos Yet!"));const t=e.domos.map((e=>React.createElement("div",{key:e.id,className:"domo"},React.createElement("img",{src:"/assets/img/domoface.jpeg",alt:"domo face",className:"domoFace"}),React.createElement("h3",{className:"domoName"}," Name: ",e.name," "),React.createElement("h3",{className:"domoAge"}," Age: ",e.age," "))));return React.createElement("div",{className:"domoList"},t)};window.onload=async()=>{const e=await fetch("/getToken"),a=await e.json();ReactDOM.render(React.createElement(m,{csrf:a.csrfToken}),document.getElementById("makeDomo")),ReactDOM.render(React.createElement(r,{domos:[]}),document.getElementById("domos")),t()}})()})();